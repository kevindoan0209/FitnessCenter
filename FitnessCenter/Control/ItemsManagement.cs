using BussinessLogicLayer;
using DataAccessLayer;
using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace FitnessCenter
{
    public partial class ItemsManagement : Form
    {
        public int Id;
        public bool isAdd = true;
        public ItemsManagement()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource2.Fill();
        }

        private void SettingManagement_Load(object sender, EventArgs e)
        {
            FillDataUpdate();
            FillData();
            txtMa.ReadOnly = true;
        }
        private void Reset()
        {
           
            txtTenThe.Text = "";
            txtGiaTien.Text = "";
        }

        private void btnLamMoi_Click(object sender, EventArgs e)
        {
            Reset();
            sqlDataSource2.Fill();
        }
        private void FillDataUpdate()
        {
            if (Id != 0)
            {
                DataFitnessCenterDataContext db = new DataFitnessCenterDataContext();
                var membership = db.Memberships.Where(i => i.Membership_ID == Id).SingleOrDefault();
                if (membership != null)
                {
                    txtTenThe.EditValue = membership.Membership_Name;
                    txtGiaTien.EditValue = membership.Membership_Price;
                  
                    txtMa.ReadOnly = true;
                }
            }
        }
        private void FillData()
        {
                DataFitnessCenterDataContext db = new DataFitnessCenterDataContext();
                var fitness = db.FitnessCenters.Where(i => i.FitnessCenter_ID == 1).SingleOrDefault();
                if (fitness != null)
                {
                    //txtTenPhong.EditValue = fitness.FitnessCenter_Name;

                  
            }
        }

        private void SaveUpdate()
        {
            try
            {

                if (string.IsNullOrEmpty(txtTenThe.Text))
                {
                    lbTrangThai.Text = "*Vui lòng nhập tên thẻ";
                    txtTenThe.Focus();
                }
                else
                {
                    if (txtGiaTien.Value == 0)
                    {
                        lbTrangThai.Text = "*Vui lòng nhập giá tiền";
                        txtGiaTien.Focus();
                    }
                    else
                    {
                        string name = txtTenThe.Text;
                      
                        int price = Convert.ToInt32(txtGiaTien.Value.ToString());
                        //BLL_Membership.UpdateMembership(Id, name, price, note);
                        Reset();
                        sqlDataSource2.Fill();
                        lbTrangThai.Text = "";
                    }
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show("Lỗi" + ex.Message);
            }
        }

        private void btnThem_Click(object sender, EventArgs e)
        {
            try
            {
                if (isAdd == false)
                {
                    SaveUpdate();
                }
                else
                {
                    if (string.IsNullOrEmpty(txtTenThe.Text))
                    {
                        lbTrangThai.Text = "*Vui lòng nhập tên thẻ";
                        txtTenThe.Focus();
                    }
                    else
                    {
                        if (txtGiaTien.Value == 0)
                        {
                            lbTrangThai.Text = "*Vui lòng nhập giá tiền";
                            txtGiaTien.Focus();
                        }
                        else
                        {
                            string name = txtTenThe.Text;
                          
                            int price = Convert.ToInt32(txtGiaTien.Value.ToString());
                          //  BLL_Membership.InsertMembership(name, price, note);
                            Reset();
                            sqlDataSource2.Fill();
                            lbTrangThai.Text = "";
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Lỗi" + ex.Message);
            }
        }

        private void csmCapNhat_Click(object sender, EventArgs e)
        {
            int rowIndex = gvDanhMuc.FocusedRowHandle;
            string colID = "Membership_ID";
            object value = gvDanhMuc.GetRowCellValue(rowIndex, colID);
            if (value != null)
            {
                Id = (int)value;
                isAdd = false;
                FillDataUpdate();
                sqlDataSource2.Fill();
            }
            else
            {
                XtraMessageBox.Show("Bạn chưa chọn đối tượng để cập nhật", "Fitness Center", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        private void csmXoa_Click(object sender, EventArgs e)
        {
            try
            {
                if (XtraMessageBox.Show("Bạn có muốn xóa không?", "Fitness Center", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    int rowIndex = gvDanhMuc.FocusedRowHandle;
                    string colID = "Membership_ID";
                    object value = gvDanhMuc.GetRowCellValue(rowIndex, colID);
                    if (value != null)
                    {
                        DataFitnessCenterDataContext dc = new DataFitnessCenterDataContext();
                        var ing = dc.Memberships.Where(s => s.Membership_ID == (int)value).SingleOrDefault();
                        if (ing != null)
                        {
                            dc.Memberships.DeleteOnSubmit(ing);
                            dc.SubmitChanges();
                            sqlDataSource2.Fill();
                        }
                    }
                    else
                    {
                        XtraMessageBox.Show("Bạn chưa chọn đối tượng cần xóa", "Fitness Center", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    }
                }
            }
            catch (Exception)
            {

                XtraMessageBox.Show("Không được phép xóa đối tượng này, đối tượng đã được thêm ở một danh mục khác", "Fitness Center", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }
       
    }

}
