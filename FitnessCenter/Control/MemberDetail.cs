using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using DataAccessLayer;
using BussinessLogicLayer;
using System.Text.RegularExpressions;

namespace FitnessCenter
{
    public partial class MemberDetail : DevExpress.XtraEditors.XtraForm
    {
        public int Id;
        public bool isAdd = true;
        public MemberDetail()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource1.Fill();
        }

        private void btnClose_Click(object sender, EventArgs e)
        {
            this.Close();
        }
        private void btnHuy_Click(object sender, EventArgs e)
        {
            this.Close();
        }
        private void SaveUpdate()
        {
            try
            {

                if (string.IsNullOrEmpty(txtTen.Text))
                {
                    lbTrangThai.Text = "*Vui lòng nhập họ và tên";
                    txtTen.Focus();
                }
                else
                {
                    if (string.IsNullOrEmpty(dtNamSinh.Text))
                    {
                        lbTrangThai.Text = "*Vui chọn ngày /tháng /năm sinh";
                        txtTen.Focus();
                    }
                    else
                    {
                        if (rbNam.Checked == false && rbNu.Checked == false)
                        {
                            lbTrangThai.Text = "*Vui lòng chọn giới tính";
                        }
                        else
                        {
                            if (lkeLoaiThe.Text == "Chọn thành viên")
                            {
                                lbTrangThai.Text = "*Vui lòng chọn loại thẻ";
                                lkeLoaiThe.Focus();
                            }
                            else
                            {
                                if (dtNgayBatDau.DateTime > dtNgayKetThuc.DateTime)
                                {
                                    lbTrangThai.Text = "*Vui lòng chọn thời gian";
                                    dtNgayKetThuc.Focus();
                                }
                                else
                                {
                                    string name = txtTen.Text;
                                    string image = txtAnh.Text;
                                    string sex;
                                    if (rbNam.Checked == true)
                                    {
                                        sex = "Nam";
                                    }
                                    else
                                    {
                                        sex = "Nữ";
                                    }
                                    string phone = txtSDT.Text;
                                    string email = txtEmail.Text;
                                    string job = txtNgheNghiep.Text;
                                    string address = txtDiaChi.Text;
                                    DateTime age = dtNamSinh.DateTime;
                                    string note = txtGhiChu.Text;
                                    string group = lkeLoaiThe.GetColumnValue("Membership_ID").ToString();
                                    int memberId = Convert.ToInt32(group);
                                    DateTime beginDate = dtNgayBatDau.DateTime;
                                    DateTime endDate = dtNgayKetThuc.DateTime;
                                    int totalAmount = 0;
                                    string notePayment = "";
                                    int id = Convert.ToInt32(txtMa.Text);
                                    if (string.IsNullOrEmpty(txtAnh.Text))
                                    {
                                        BLL_Human.UpdateCustomerNoImage(id, name, age, sex, email, phone, job, address, memberId, note, beginDate, endDate);
                                        int lastID = BLL_Human.GetLastIdCustomer();
                                        int lastIdPayment = BLL_Payment.GetLastIdPayment();
                                        BLL_Payment.UpdatePayment(lastIdPayment, lastID, beginDate, endDate, totalAmount, notePayment);

                                        this.Close();
                                    }
                                    else
                                    {
                                        BLL_Human.UpdateCustomerImage(id, name, age, sex, email, phone, job, address, memberId, note, beginDate, endDate, image);
                                        int lastID = BLL_Human.GetLastIdCustomer();
                                        int lastIdPayment = BLL_Payment.GetLastIdPayment();
                                        BLL_Payment.UpdatePayment(lastIdPayment, lastID, beginDate, endDate, totalAmount, notePayment);

                                        this.Close();
                                    }
                                }
                            }
                        }
                    }
                }

            }
            catch (Exception ex)
            {
                String info = ex.Message;
                MessageError error = new MessageError();
                error.message = info;
                error.ShowDialog();
            }
        }
        private void btnTao_Click(object sender, EventArgs e)
        {
            try
            {
                if (isAdd == false)
                {
                    SaveUpdate();
                }
                else
                {
                    if (string.IsNullOrEmpty(txtTen.Text))
                    {
                        lbTrangThai.Text = "*Vui lòng nhập họ và tên";
                        txtTen.Focus();
                    }
                    else
                    {
                        if (string.IsNullOrEmpty(dtNamSinh.Text))
                        {
                            lbTrangThai.Text = "*Vui chọn ngày /tháng /năm sinh";
                            txtTen.Focus();
                        }
                        else
                        {
                            if (rbNam.Checked == false && rbNu.Checked == false)
                            {
                                lbTrangThai.Text = "*Vui lòng chọn giới tính";
                            }
                            else
                            {
                                if (lkeLoaiThe.Text == "Chọn thẻ")
                                {
                                    lbTrangThai.Text = "*Vui lòng chọn loại thẻ";
                                    lkeLoaiThe.Focus();
                                }
                                else
                                {
                                    if (dtNgayBatDau.DateTime > dtNgayKetThuc.DateTime)
                                    {
                                        lbTrangThai.Text = "*Khoảng thời gian không hợp lệ";
                                        dtNgayKetThuc.Focus();
                                    }
                                    else
                                    {
                                        string name = txtTen.Text;
                                        string image = txtAnh.Text;
                                        string sex;
                                        if (rbNam.Checked == true)
                                        {
                                            sex = "Nam";
                                        }
                                        else
                                        {
                                            sex = "Nữ";
                                        }
                                        string phone = txtSDT.Text;
                                        string email = txtEmail.Text;
                                        string job = txtNgheNghiep.Text;
                                        string address = txtDiaChi.Text;
                                        DateTime age = dtNamSinh.DateTime;
                                        string note = txtGhiChu.Text;
                                        string group = lkeLoaiThe.GetColumnValue("Membership_ID").ToString();
                                        int memberId = Convert.ToInt32(group);
                                        DateTime beginDate = dtNgayBatDau.DateTime;
                                        DateTime endDate = dtNgayKetThuc.DateTime;
                                        int totalAmount = 0;
                                        string notePayment = "";
                                        if (string.IsNullOrEmpty(txtAnh.Text))
                                        {
                                            BLL_Human.InsertCustomerNoImage(name, age, sex, email, phone, job, address, memberId, note, beginDate, endDate);
                                            int lastID = BLL_Human.GetLastIdCustomer();
                                            BLL_Payment.InsertPayment(lastID, beginDate, endDate, totalAmount, notePayment);

                                            this.Close();
                                        }
                                        else
                                        {
                                            BLL_Human.InsertCustomerImage(name, age, sex, email, phone, job, address, memberId, note, beginDate, endDate, image);
                                            int lastID = BLL_Human.GetLastIdCustomer();
                                            BLL_Payment.InsertPayment(lastID, beginDate, endDate, totalAmount, notePayment);

                                            this.Close();
                                        }
                                    }
                                }
                            }
                        }
                    }
                }

            }
            catch (Exception ex)
            {
                String info = ex.Message;
                MessageError error = new MessageError();
                error.message = info;
                error.ShowDialog();
            }
        }

        private void peAnh_Click(object sender, EventArgs e)
        {
            try
            {

                OpenFileDialog openFileDialog = new OpenFileDialog();
                openFileDialog.Filter = ("Image Files |*.png; *.bmp; *.jpg;*.jpeg; *.gif;");
                openFileDialog.FilterIndex = 4;
                openFileDialog.RestoreDirectory = true;
                if (openFileDialog.ShowDialog() == DialogResult.OK)
                {
                    txtAnh.Text = openFileDialog.FileName;
                    peAnh.Image = Image.FromFile(openFileDialog.FileName);
                }
            }
            catch (Exception ex)
            {
                XtraMessageBox.Show("Không thể tải được ảnh", ex.Message);
            }
        }
        private void FillDataUpdate()
        {
            if (Id != 0)
            {
                DataFitnessCenterDataContext db = new DataFitnessCenterDataContext();
                var customer = db.Customers.Where(i => i.Customer_ID == Id).SingleOrDefault();
                if (customer != null)
                {
                    txtMa.EditValue = customer.Customer_ID;
                    txtTen.EditValue = customer.Customer_Name;
                    txtDiaChi.EditValue = customer.Customer_Address;
                    txtEmail.EditValue = customer.Customer_Email;
                    txtNgheNghiep.EditValue = customer.Customer_Job;
                    txtSDT.EditValue = customer.Customer_Note;
                    dtNamSinh.EditValue = customer.Customer_Age;
                    txtNgheNghiep.EditValue = customer.Customer_Job;
                    txtGhiChu.EditValue = customer.Customer_Note;
                    lkeLoaiThe.EditValue = customer.Membership_ID;
                    string sex = customer.Customer_Sex;
                    if (sex == "Nam")
                    {
                        rbNam.Checked = true;
                    }
                    else
                    {
                        rbNu.Checked = true;
                    }
                    peAnh.EditValue = customer.Customer_Image;
                    txtMa.ReadOnly = true;
                }
            }
        }

        private void MemberDetail_Load(object sender, EventArgs e)
        {
            txtMa.ReadOnly = true;
            dtNgayBatDau.EditValue = DateTime.Now;
            dtNgayKetThuc.EditValue = DateTime.Now;
            FillDataUpdate();
        }

        private void txtSDT_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!Char.IsDigit(e.KeyChar) && !Char.IsControl(e.KeyChar))
                e.Handled = true;
        }

        private void txtEmail_Validating(object sender, CancelEventArgs e)
        {
            string email = txtEmail.Text;
            Regex regex = new Regex(@"^([\w\.\-]+)@([\w\-]+)((\.(\w){2,3})+)$");
            Match match = regex.Match(email);
            if (!match.Success)
            {
                lbTrangThai.Text = "*Địa chỉ email không hợp lệ";
                e.Cancel = true;
                btnTao.Enabled = false;
            }
            else
            {
                lbTrangThai.Text = "";
                e.Cancel = false;
                btnTao.Enabled = true;
            }
        }

        private void txtSDT_Validating(object sender, CancelEventArgs e)
        {
            if (txtSDT.Text.Length < 10 || txtSDT.Text.Length > 11)
            {

                lbTrangThai.Text = "*Số điện thoại phải từ 10 đến 11 số";
                txtSDT.Focus();
                e.Cancel = true;
                btnTao.Enabled = false;
            }
            else
            {
                lbTrangThai.Text = "";
                e.Cancel = false;
                btnTao.Enabled = true;
            }
        }
    }
}