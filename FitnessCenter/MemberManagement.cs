using BussinessLogicLayer;
using DataAccessLayer;
using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace FitnessCenter
{
    public partial class MemberManagement : Form
    {
        public static int Id;
        public MemberManagement()
        {
            InitializeComponent();


            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource1.Fill();
        }

        private void btnXuatFile_Click(object sender, EventArgs e)
        {
            try
            {
                string FileName = "C:\\Users\\Admin\\Desktop\\DanhSachNguoiDung.xls";
                grcDanhMuc.ExportToXls(FileName);
                XtraMessageBox.Show("Đã xuất tệp thành công. Tệp được lưu ngoài màn hình chính", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            catch (Exception)
            {
                XtraMessageBox.Show("Không thể xuất được tệp tin", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void btnKhoa_Click(object sender, EventArgs e)
        {
            int rowIndex = gvDanhMuc.FocusedRowHandle;
            string colID = "Account_ID";
            object value = gvDanhMuc.GetRowCellValue(rowIndex, colID);
            if (value != null)
            {
                int Id = (int)value;
                if (Id != 0)
                {
                    DataFitnessCenterDataContext db = new DataFitnessCenterDataContext();
                    var account = db.Accounts.Where(i => i.Account_ID == (int)Id).SingleOrDefault();
                    if (account != null)
                    {
                        String status = Convert.ToString(account.Account_Status);
                        if (status != "Đang hoạt động")
                        {
                            status = "Đang hoạt động";
                            BLL_Human.UpdateAccountStatus(Id, status);
                            XtraMessageBox.Show("Đã mở hoạt động tài khoản này", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Information);

                        }
                        else
                        {
                            status = "Đã bị khóa";
                            BLL_Human.UpdateAccountStatus(Id, status);
                            XtraMessageBox.Show("Đã khóa tài khoản này", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                        }
                        sqlDataSource1.Fill();
                    }
                }
            }
            else
            {
                XtraMessageBox.Show("Bạn chưa chọn đối tượng để khóa", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        private void btnLamMoi_Click(object sender, EventArgs e)
        {
            sqlDataSource1.Fill();
        }
        private Form IsExits(Type type)
        {
            foreach (Form f in this.MdiChildren)
            {
                if (f.GetType() == type)
                {
                    return f;
                }
            }
            return null;
        }

        private void btnThem_Click(object sender, EventArgs e)
        {
            Form frm = this.IsExits(typeof(AccountDetail));
            if (frm != null)
            {
                frm.Activate();
            }
            else
            {
                AccountDetail account = new AccountDetail();
                account.isAdd = true;
                account.ShowDialog();
                sqlDataSource1.Fill();
            }
        }

        private void csmXoa_Click(object sender, EventArgs e)
        {
            try
            {
                if (XtraMessageBox.Show("Bạn có muốn xóa không?", "Clinience", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    int rowIndex = gvDanhMuc.FocusedRowHandle;
                    string colID = "Account_ID";
                    object value = gvDanhMuc.GetRowCellValue(rowIndex, colID);
                    if (value != null)
                    {
                        DataFitnessCenterDataContext dc = new DataFitnessCenterDataContext();
                        var account = dc.Accounts.Where(s => s.Account_ID == (int)value).SingleOrDefault();
                        int accountId = Convert.ToInt32(account.Account_ID);
                        if (Id != accountId)
                        {
                            if (account != null)
                            {
                                dc.Accounts.DeleteOnSubmit(account);
                                dc.SubmitChanges();
                                sqlDataSource1.Fill();
                                XtraMessageBox.Show("Đã xóa thành công", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            }
                        }
                        else
                        {
                            XtraMessageBox.Show("Không được phép xóa tài khoản sử dụng hiện tại", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                        }
                    }
                    else
                    {
                        XtraMessageBox.Show("Bạn chưa chọn đối tượng cần xóa", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    }
                }
            }
            catch (Exception)
            {
                XtraMessageBox.Show("Không được phép xóa đối tượng này, đối tượng đã được thêm ở một danh mục khác", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void csmCapNhat_Click(object sender, EventArgs e)
        {
            int rowIndex = gvDanhMuc.FocusedRowHandle;
            string colID = "Account_ID";
            object value = gvDanhMuc.GetRowCellValue(rowIndex, colID);
            if (value != null)
            {
                AccountDetail account = new AccountDetail();
                account.Id = (int)value;
                account.isAdd = false;
                account.ShowDialog();
                sqlDataSource1.Fill();
            }
            else
            {
                XtraMessageBox.Show("Bạn chưa chọn đối tượng để cập nhật", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }
    }
}
